module Tests where

import Commands
import FileSystem
import Test.Tasty
import ParserOptions
import Test.Tasty.HUnit
import Control.Monad.State
import Control.Monad.Except
import System.Directory
import qualified System.Directory.Internal as SDI
--import Data.Time.Clock
import qualified Data.ByteString.Char8 as B8
--import System.FilePath.Posix

tests :: TestTree
tests = testGroup "Tests" [cdTests, lsTests, dirTests, createFolderTests, catTests, createFileTests, removeTests, findTests, writeTests, informationTests]

fs1 :: Directory
fs1 = Directory { internal = [File { curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text", content = B8.pack "bugaga\n1123\ngkejg\n", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = "", modificationTime = read "2020-05-08 01:31:09.359379643 UTC", curSize = 18 },File { curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt", content = B8.pack "kukarek.txt", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = ".txt", modificationTime = read "2020-05-08 01:31:09.359379643 UTC", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }

fs2 :: Directory
fs2 = Directory { internal = [Directory { internal = [], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }

fs3 :: Directory
fs3 = Directory { internal = [File { curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text", content = B8.pack "bugaga\n1123\ngkejg\n", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = "", modificationTime = read "2020-05-08 01:31:09.359379643 UTC", curSize = 18 },File { curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt", content = B8.pack "kukarek.txt", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = ".txt", modificationTime = read "2020-05-08 01:31:09.359379643 UTC", curSize = 11 },Directory { internal = [Directory { internal = [File { curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3", content = B8.pack "", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = "", modificationTime = read "2020-05-08 01:31:09.359379643 UTC", curSize = 0 }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder", curPermissions = SDI.Permissions {readable = True, writable = True, executable = False, searchable = True} }

appState1 :: AppState
appState1 = AppState fs1 fs1

appState2 :: AppState
appState2 = AppState fs1 fs2

appState3 :: AppState
appState3 = AppState fs3 fs3

cd1ans :: [Char]
cd1ans = "(Left \"\\1057urrent directory is root\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cd2ans :: [Char]
cd2ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cd3ans :: [Char]
cd3ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cd5ans :: [Char]
cd5ans = "(Left \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/kek does not exist\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cd4ans :: [Char]
cd4ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cdTests :: TestTree
cdTests =
  testGroup
    "cdTests"
    [ testCase "cd .. from root" $ do
          res <- ((runStateT (runExceptT (cd (PathOptions "..")))) appState1)
          assertEqual "Error: cd .. from root is not correct" (show res) (cd1ans),
      testCase "cd by folder name" $ do
          res <- ((runStateT (runExceptT (cd (PathOptions "1a")))) appState1)
          assertEqual "Error: cd by folder name is not correct" (show res) (cd2ans),
      testCase "cd by root path" $ do
          res <- ((runStateT (runExceptT (cd (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder")))) appState1)
          assertEqual "Error: cd by root path is not correct" (show res) (cd3ans),
      testCase "cd by folder path" $ do
          res <- ((runStateT (runExceptT (cd (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a")))) appState1)
          assertEqual "Error: cd by folder path is not correct" (show res) (cd4ans),
      testCase "cd by folder path which doesn't exist" $ do
          res <- ((runStateT (runExceptT (cd (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/kek")))) appState1)
          assertEqual "Error: cd by folder path which doesn't exist" (show res) (cd5ans)
    ]

ls1ans :: String
ls1ans = "(Right [\"2aA\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

ls2ans :: String
ls2ans = "(Right [\"2aA\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

ls3ans :: String
ls3ans = "(Left \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1b does not exist\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

lsTests :: TestTree
lsTests =
  testGroup
    "lsTests"
    [ testCase "ls by folder name" $ do
          res <- ((runStateT (runExceptT (ls (PathOptions "1a")))) appState1)
          assertEqual "Error: ls by folder name is not correct" (show res) (ls1ans),
      testCase "ls by folder path" $ do
          res <- ((runStateT (runExceptT (ls (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a")))) appState1)
          assertEqual "Error: ls by folder path is not correct" (show res) (ls2ans),
      testCase "ls by path which doesn't exist" $ do
          res <- ((runStateT (runExceptT (ls (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1b")))) appState1)
          assertEqual "Error: ls by folder path is not correct" (show res) (ls3ans)
    ]

dir1ans :: String
dir1ans = "(Right [\"text\",\"text2\",\"1a\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

dir2ans :: String
dir2ans = "(Right [\"2aA\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

dirTests :: TestTree
dirTests =
  testGroup
    "dirTests"
    [ testCase "dir in root" $ do
          res <- ((runStateT (runExceptT (getDir NoOptions))) appState1)
          assertEqual "Error: dir in root is not correct" (show res) (dir1ans),
      testCase "dir not in root" $ do
          res <- ((runStateT (runExceptT (getDir NoOptions))) appState2)
          assertEqual "Error: dir not in root is not correct" (show res) (dir2ans)
    ]

createFolder1ans :: String
createFolder1ans = "(Right (),AppState {fileSystem = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/newFolder1\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/newFolder1\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

createFolder2ans :: String
createFolder2ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/newFolder2\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} },Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/newFolder2\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} },Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

createFolderTests :: TestTree
createFolderTests =
  testGroup
    "createFolderTests"
    [ testCase "createFolder in root" $ do
          res <- ((runStateT (runExceptT (createFolder (NameOptions "newFolder1")))) appState1)
          assertEqual "Error: createFolder in root in root is not correct" (show res) (createFolder1ans),
      testCase "createFolder not in root" $ do
          res <- ((runStateT (runExceptT (createFolder (NameOptions "newFolder2")))) appState2)
          assertEqual "Error: createFolder in root not in root is not correct" (show res) (createFolder2ans)
    ]

cat1ans :: String
cat1ans = "(Right \"bugaga\\n1123\\ngkejg\\n\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

cat2ans :: String
cat2ans = "(Left \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1b.txt does not exist\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

catTests :: TestTree
catTests =
  testGroup
    "catTests"
    [ testCase "cat file which exists" $ do
          res <- ((runStateT (runExceptT (cat (PathOptions "text")))) appState1)
          assertEqual "Error: cat file which exists is not correct" (show res) (cat1ans),
      testCase "cat file which doesn't exist" $ do
          res <- ((runStateT (runExceptT (cat (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1b.txt")))) appState1)
          assertEqual "Error: cat file which doesn't exist is not correct" (show res) (cat2ans)
    ]

createFile1ans :: String
createFile1ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/newFile1\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/newFile1\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

createFile2ans :: String
createFile2ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/newFile2\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 },Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/newFile2\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 },Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

createFileTests :: TestTree
createFileTests =
  testGroup
    "createFileTests"
    [ testCase "createFile in root" $ do
          res <- ((runStateT (runExceptT (createFile (NameOptions "newFile1")))) appState1)
          assertEqual "Error: createFile in root is not correct" (show res) (createFile1ans),
      testCase "createFile not in root" $ do
          res <- ((runStateT (runExceptT (createFile (NameOptions "newFile2")))) appState2)
          assertEqual "Error: createFile not in root is not correct" (show res) (createFile2ans)
    ]

remove1ans :: String
remove1ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

remove2ans :: String
remove2ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

removeTests :: TestTree
removeTests =
  testGroup
    "removeTests"
    [ testCase "remove file" $ do
          res <- ((runStateT (runExceptT (remove (PathOptions "text")))) appState1)
          assertEqual "Error: remove file is not correct" (show res) (remove1ans),
      testCase "remove folder" $ do
          res <- ((runStateT (runExceptT (remove (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA")))) appState2)
          assertEqual "Error: remove folder is not correct" (show res) (remove2ans)
    ]

find1ans :: String
find1ans = "(Right \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

find2ans :: String
find2ans = "(Right \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3\",AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3\", content = \"\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 0 }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

findTests :: TestTree
findTests =
  testGroup
    "findTests"
    [ testCase "find file in current directory" $ do
          res <- ((runStateT (runExceptT (Commands.findFile (NameOptions "text")))) appState1)
          assertEqual "Error: remove file is not correct" (show res) (find1ans),
      testCase "find file not exactly in current directory" $ do
          res <- ((runStateT (runExceptT (Commands.findFile (NameOptions "text3")))) appState3)
          assertEqual "Error: remove folder is not correct" (show res) (find2ans)
    ]

write1ans :: String
write1ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"newKek\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 6 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"newKek\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 6 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

write2ans :: String
write2ans = "(Right (),AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3\", content = \"newKek2\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 7 }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3\", content = \"newKek2\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True}, curType = \"\", curSize = 7 }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

writeTests :: TestTree
writeTests =
  testGroup
    "writeTests"
    [ testCase "write in file in current directory" $ do
          res <- ((runStateT (runExceptT (writeToFile (WriteOptions "text" "newKek")))) appState1)
          assertEqual "Error: write in file in current directory is not correct" (show res) (write1ans),
      testCase "write in file not exactly in current directory" $ do
          res <- ((runStateT (runExceptT (writeToFile (WriteOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA/text3" "newKek2")))) appState3)
          assertEqual "Error: write in file not exactly in current directory is not correct" (show res) (write2ans)
    ]

information1ans :: String
information1ans = "(Right [\"\\\"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\\\"\",\"Permissions {readable = True, writable = True, executable = False, searchable = False}\",\"\\\"\\\"\",\"18\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

information2ans :: String
information2ans = "(Right [\"29\",\"\\\"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\\\"\",\"2\",\"Permissions {readable = True, writable = True, executable = False, searchable = True}\"],AppState {fileSystem = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }, curDirectory = Directory { internal = [File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text\", content = \"bugaga\\n1123\\ngkejg\\n\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \"\", curSize = 18 },File { curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/text2.txt\", content = \"kukarek.txt\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = False}, curType = \".txt\", curSize = 11 },Directory { internal = [Directory { internal = [], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a/2aA\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder/1a\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }], curPath = \"/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder\", curPermissions = Permissions {readable = True, writable = True, executable = False, searchable = True} }})"

informationTests :: TestTree
informationTests =
  testGroup
    "informationTests"
    [ testCase "file information" $ do
          res <- ((runStateT (runExceptT (information (PathOptions "text")))) appState1)
          assertEqual "Error: file information is not correct" (show res) (information1ans),
      testCase "folder information" $ do
          res <- ((runStateT (runExceptT (information (PathOptions "/home/galina13/Study/Haskell/fp-homework-templates-2020/TestFolder")))) appState1)
          assertEqual "Error: folder information is not correct" (show res) (information2ans)
    ]

{--main = defaultMain $ --testCaseSteps "Multi-step test" $ \step -> do
  testCase "Preparing..." $ do
    res <- (show ((runStateT (runExceptT (cd (PathOptions ".."))))))
    assertEqual "Error: cd .. from root is not correct" (show res) (cd1ans)-}